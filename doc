Title: IIS Site & App Pool Start/Stop using Azure DevOps Pipeline with WinRM over HTTPS



1. Objective

Automate the process of starting and stopping IIS Sites and Application Pools from an Azure DevOps pipeline before the CD pipeline starts.

Securely connect to a Windows Server VM using WinRM using username and password over HTTPS (5986).

Credentials for the server are called to the pipeline from Variable Group - ""



2. Actions Performed

A. IIS / WinRM Configuration on Windows VM

Enabled WinRM service using winrm quickconfig.

Created a self-signed certificate for the VM’s public IP.

Configured a WinRM HTTPS listener (5986) using the generated certificate.

Enabled Basic Authentication for WinRM service.

Opened TCP port 5986 in both Windows Firewall and Azure NSG.

Verified the listener using winrm e winrm/config/listener.


B. Azure DevOps Variable Group Setup

Created a Variable Group in Azure DevOps Library named ""

Added the following variables:

WebServer – VM IP or hostname

SiteName – IIS site name

AppPoolName – IIS application pool name

IISUser – Admin username for the VM

IISPassword – Password for the user (marked as secret)

Linked the variable group to the YAML pipeline using variables: - group: ""


C. Pipeline Logic

Used an Azure DevOps pipeline with PowerShell tasks.

Established a remote PowerShell session over HTTPS (5986) to the VM using Basic authentication and a self-signed cert.

Implemented steps:


Stop IIS Site & App Pool

Check current state and stop only if running.



Start IIS Site & App Pool

Check current state and start only if stopped.

Verified final state after starting.


Security Considerations

Moved credentials to secret variables in a Variable Group.

Avoided hardcoding credentials in YAML.

Used WinRM over HTTPS instead of HTTP for encryption.

Added certificate validation bypass only because a self-signed cert was used for testing.

Opened port 5986 with controlled NSG rules (test setup).


3. Outcome

Established secure remoting to the VM using WinRM over HTTPS.

Successfully automated start and stop of IIS Sites and App Pools from Azure DevOps.

Verified the entire workflow end-to-end using a test VM.


Pipeline Tasks

Task 1 – Stop IIS Site and App Pool remotely

Type: PowerShell@2 (inline script)

Action:

Creates a remote PowerShell session to the Windows VM over WinRM HTTPS (5986) using New-PSSession.

Stops the App Pool and Site only if their state is Started.

Uses Import-Module WebAdministration to access IIS cmdlets.

Error Handling:

Uses try/catch blocks.

Throws exceptions if stop actions fail, so the pipeline fails immediately.


Task 2 – Start IIS Site and App Pool remotely

Type: PowerShell@2 (inline script)

Action:

Opens another secure remote session using WinRM HTTPS.

Starts the App Pool and Site if they are not already running.

Verifies final states of both components after starting.

Error Handling:

Includes try/catch blocks and throws errors if any start operation fails.

Verification step ensures that the site and app pool are actually in the Started state at the end.
